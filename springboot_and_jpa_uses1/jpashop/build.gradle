plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    // 이 springboot 플러그인은 라이브러리에 대한 dependency 까지 (버전 포함) 다 관리해 준다.
    // + 다른 기본 라이브러리에 대해서는 어떤 버전이 좋은지도 세팅을 해놔서 따로 버전 관리도 안해도 된다...
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'jpabook'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies { // gradle는 필요한 의존관계를 한번에 쭉 당긴다. (하나의 라이브러리도 다른 의존관계를 또 갖고 있음.)
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // spring-boot-starter 라이브러리를 쓰면, 우리가 필요한 의존관계 라이브러리를 한번에 걸어서 가져온다.

    implementation 'org.springframework.boot:spring-boot-devtools'
    //개발에 도움을 주는 라이브러리로 캐시 등을 다 없애고 해서 reload를 가능하게 한다.

    implementation("com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0")
    //SQL 로거용 파라미터 보이기

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}
