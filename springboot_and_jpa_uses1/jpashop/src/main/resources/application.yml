# application.properties 를 사용할 수도 있으나, 설정이 복잡해지면 yaml이 나음...
spring:
  datasource: # 데이터베이스 커넥션 관련 데이터 소스 설정
    url: jdbc:h2:tcp://localhost/~/jpashop;
    username: sa
    password:
    driver-class-name: org.h2.Driver

  jpa:
    hibernate:
      ddl-auto: create # create: 애플리케이션 시작 시, 기존의 테이블을 다 지우고, 엔티티 정보로 다시 테이블 생성.
    properties:
        hibernate:
          #show_sql: true # 아래와 SQL를 보여주는 것은 같으나, 시스템 출력에서 출력 - 그래서 쓰면 안됨.
          format_sql: true

logging:
  level:
    org.hibernate.SQL: debug # SQL과 JPA를 출력하나, 로거에서 출력
    org.hibernate.orm.jdbc.bind: trace # SQL의 파라미터를 로그에 찍어줌... (보다 간단하게 보기 위해서 외부 라이브러리 사용 가능)
